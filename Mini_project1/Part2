<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz avec Open Trivia Database</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            background: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }
        .question {
            margin-bottom: 20px;
            display: none;
        }
        .question.active {
            display: block;
        }
        .question h2 {
            margin-bottom: 10px;
            color: #333;
        }
        .options {
            list-style-type: none;
            padding: 0;
        }
        .options li {
            margin-bottom: 10px;
        }
        .options li input {
            margin-right: 10px;
        }
        .score {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
            color: #4CAF50;
        }
        .timer {
            font-size: 18px;
            margin-bottom: 20px;
            color: #E91E63;
        }
        .progress-bar {
            width: 100%;
            background-color: #ddd;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .progress {
            height: 10px;
            background-color: #4CAF50;
            border-radius: 5px;
            width: 0%;
            transition: width 0.5s;
        }
        .buttons {
            display: flex;
            justify-content: space-between;
        }
        button {
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
        }
        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        #prevButton {
            background-color: #2196F3;
        }
        #submitButton {
            background-color: #E91E63;
        }
    </style>
</head>
<body>
    <div class="container">
        <form id="quizConfig">
            <h2>Configurer le Quiz</h2>
            <label for="category">Catégorie:</label>
            <select id="category" name="category">
                <!-- Options will be populated dynamically -->
            </select>
            <br><br>
            <label for="difficulty">Difficulté:</label>
            <select id="difficulty" name="difficulty">
                <option value="easy">Facile</option>
                <option value="medium">Moyen</option>
                <option value="hard">Difficile</option>
            </select>
            <br><br>
            <label for="type">Type:</label>
            <select id="type" name="type">
                <option value="multiple">Choix multiple</option>
                <option value="boolean">Vrai/Faux</option>
            </select>
            <br><br>
            <button type="button" onclick="startQuiz()">Commencer le Quiz</button>
        </form>
        <div id="quizContainer" style="display: none;">
            <div class="score" id="score"></div>
            <div class="timer" id="timer">Temps restant: 10s</div>
            <div class="progress-bar">
                <div class="progress" id="progress"></div>
            </div>
            <div id="questions"></div>
            <div class="buttons">
                <button id="prevButton" onclick="showPreviousQuestion()" disabled>Précédent</button>
                <button id="nextButton" onclick="showNextQuestion()">Suivant</button>
                <button id="submitButton" onclick="calculateScore()" style="display: none;">Soumettre</button>
            </div>
        </div>
    </div>

    <script>
        let timer;
        let timeLeft = 10;
        let curr = 0;
        let questions = [];
        let totalQuestions = 0;

        async function fetchCategories() {
            const response = await fetch('https://opentdb.com/api_category.php');
            const data = await response.json();
            const categorySelect = document.getElementById('category');
            data.trivia_categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category.id;
                option.textContent = category.name;
                categorySelect.appendChild(option);
            });
        }

        async function startQuiz() {
            const category = document.getElementById('category').value;
            const difficulty = document.getElementById('difficulty').value;
            const type = document.getElementById('type').value;
            const response = await fetch(`https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=${type}`);
            const data = await response.json();
            questions = shuffleArray(data.results); // Shuffle questions
            totalQuestions = questions.length;
            document.getElementById('quizConfig').style.display = 'none';
            document.getElementById('quizContainer').style.display = 'block';
            showNextQuestion();
        }

        function shuffleArray(array) {
            return array.sort(() => Math.random() - 0.5);
        }

        function startTimer() {
            timer = setInterval(function() {
                if (timeLeft <= 0) {
                    clearInterval(timer); // Arrêter le timer
                    showNextQuestion(); // Passer à la question suivante
                } else {
                    document.getElementById("timer").innerText = "Temps restant: " + timeLeft + "s"; // Afficher le temps restant
                }
                timeLeft -= 1; // Décrémenter le temps restant
            }, 1000);
        }

        function showNextQuestion() {
            if (curr < totalQuestions) {
                if (curr > 0) {
                    document.getElementById(`question${curr}`).classList.remove('active');
                }
                curr += 1;
                displayQuestion(curr);
                timeLeft = 10;
                startTimer();
                updateProgress();
                document.getElementById("prevButton").disabled = false; // Activer le bouton "Précédent"
            } else {
                document.getElementById("nextButton").style.display = "none";
                document.getElementById("submitButton").style.display = "block";
                clearInterval(timer);
            }
        }

        function showPreviousQuestion() {
            if (curr > 1) { // Vérifier si ce n'est pas la première question
                document.getElementById(`question${curr}`).classList.remove('active');
                curr -= 1;
                displayQuestion(curr);
                timeLeft = 10;
                startTimer();
                updateProgress();
                if (curr === 1) {
                    document.getElementById("prevButton").disabled = true; // Désactiver le bouton "Précédent" sur la première question
                }
            }
        }

        function displayQuestion(index) {
            const question = questions[index - 1];
            const questionContainer = document.getElementById('questions');
            const questionElement = document.createElement('div');
            questionElement.id = `question${index}`;
            questionElement.classList.add('question', 'active');

            // Combine incorrect and correct answers, then shuffle them
            const allAnswers = shuffleArray([...question.incorrect_answers, question.correct_answer]);

            // Build the HTML for the question
            questionElement.innerHTML = `
                <h2>${question.question}</h2>
                <ul class="options">
                    ${allAnswers.map(answer => `<li><input type="radio" name="q${index}" value="${answer}"> ${answer}</li>`).join('')}
                </ul>
            `;

            // Append the question to the container
            questionContainer.innerHTML = ''; // Clear previous question
            questionContainer.appendChild(questionElement);
        }

        function calculateScore() {
            clearInterval(timer);
            let score = 0;
            questions.forEach((question, index) => {
                const selectedOption = document.querySelector(`input[name="q${index + 1}"]:checked`);
                if (selectedOption && selectedOption.value === question.correct_answer) {
                    score += 1;
                }
            });
            document.getElementById("score").innerText = "Votre score: " + score + "/" + totalQuestions;
        }

        function updateProgress() {
            const progress = (curr / totalQuestions) * 100;
            document.getElementById("progress").style.width = progress + "%";
        }

        window.onload = function() {
            fetchCategories();
        };
    </script>
</body>
</html>
